package org.jboss.pressgangccms.restserver.entities;

// Generated Jun 8, 2011 12:08:27 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Transient;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.envers.Audited;
import org.jboss.pressgangccms.restserver.entities.base.AuditedEntity;

/**
 * StringConstants generated by hbm2java
 */
@Entity
@Audited
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "StringConstants")
public class StringConstants extends AuditedEntity<StringConstants> implements java.io.Serializable
{
	private static final long serialVersionUID = -6403239052018430987L;
	private Integer stringConstantsId;
	private String constantName;
	private String constantValue;

	public StringConstants()
	{
		super(StringConstants.class);
	}

	public StringConstants(final String constantName)
	{
		super(StringConstants.class);
		this.constantName = constantName;
	}

	public StringConstants(final String constantName, final String constantValue)
	{
		super(StringConstants.class);
		this.constantName = constantName;
		this.constantValue = constantValue;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "StringConstantsID", unique = true, nullable = false)
	public Integer getStringConstantsId()
	{
		return this.stringConstantsId;
	}

	public void setStringConstantsId(Integer stringConstantsId)
	{
		this.stringConstantsId = stringConstantsId;
	}

	@Column(name = "ConstantName", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getConstantName()
	{
		return this.constantName;
	}

	public void setConstantName(final String constantName)
	{
		this.constantName = constantName;
	}

	// @Column(name = "ConstantValue", length = 65535)
	@Column(name = "ConstantValue", columnDefinition = "TEXT")
	@Size(max = 65535)
	public String getConstantValue()
	{
		return this.constantValue;
	}

	public void setConstantValue(final String constantValue)
	{
		this.constantValue = constantValue;
	}

	@Override
	@Transient
	public Integer getId()
	{
		return this.stringConstantsId;
	}

}
