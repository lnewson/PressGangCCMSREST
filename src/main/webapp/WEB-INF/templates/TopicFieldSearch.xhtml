<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:s="http://jboss.com/products/seam/taglib"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:c="http://java.sun.com/jstl/core">


	<h:panelGrid id="grid" columns="1">
		<h:panelGroup>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicDates', 'Rendered', null)}">
				<ui:define name="label">Topic Created After</ui:define>
				<rich:calendar value="#{topic.startCreateDatePlain}" locale="AU"
					popup="true" datePattern="dd MMM yyyy HH:mm" showApplyButton="true"
					cellWidth="24px" cellHeight="22px" style="width:200px" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicDates', 'Rendered', null)}">
				<ui:define name="label">Topic Created Before</ui:define>
				<rich:calendar value="#{topic.endCreateDatePlain}" locale="AU"
					popup="true" datePattern="dd MMM yyyy HH:mm" showApplyButton="true"
					cellWidth="24px" cellHeight="22px" style="width:200px" />

			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicEditDates', 'Rendered', null)}">
				<ui:define name="label">Topic Edited After</ui:define>
				<rich:calendar value="#{topic.startEditDatePlain}" locale="AU"
					popup="true" datePattern="dd MMM yyyy HH:mm" showApplyButton="true"
					cellWidth="24px" cellHeight="22px" style="width:200px" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicEditDates', 'Rendered', null)}">
				<ui:define name="label">Topic Edited Before</ui:define>
				<rich:calendar value="#{topic.endEditDatePlain}" locale="AU"
					popup="true" datePattern="dd MMM yyyy HH:mm" showApplyButton="true"
					cellWidth="24px" cellHeight="22px" style="width:200px" />

			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicEditedInLast', 'Rendered', null)}">
				<ui:define name="label">Topic Edited In Last x Days</ui:define>
				<h:inputText size="125" id="topicEditedInLast"
					value="#{topic.editedInLastDays.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicEditedInLast', 'Rendered', null)}">
				<ui:define name="label">Topic Not Edited In Last x Days</ui:define>
				<h:inputText size="125" id="topicNotEditedInLast"
					value="#{topic.notEditedInLastDays.data}" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicID', 'Rendered', null)}">
				<ui:define name="label">Topic ID</ui:define>
				<h:inputText size="125" id="topicID" value="#{topic.topicIds.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicID', 'Rendered', null)}">
				<ui:define name="label">Not Topic ID</ui:define>
				<h:inputText size="125" id="topicIDNot" value="#{topic.notTopicIds.data}" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicTitle', 'Rendered', null)}">
				<ui:define name="label">Topic Title</ui:define>
				<h:inputText size="125" id="topicTitle" value="#{topic.topicTitle.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicTitle', 'Rendered', null)}">
				<ui:define name="label">Not Topic Title</ui:define>
				<h:inputText size="125" id="notTopicTitle" value="#{topic.notTopicTitle.data}" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicXML', 'Rendered', null)}">
				<ui:define name="label">Topic XML</ui:define>
				<h:inputText size="125" id="topicXML" value="#{topic.topicXML.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicXML', 'Rendered', null)}">
				<ui:define name="label">Not Topic XML</ui:define>
				<h:inputText size="125" id="notTopicXML" value="#{topic.notTopicXML.data}" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicText', 'Rendered', null)}">
				<ui:define name="label">Topic Description</ui:define>
				<h:inputText size="125" id="topicText" value="#{topic.topicDescription.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicText', 'Rendered', null)}">
				<ui:define name="label">Not Topic Description</ui:define>
				<h:inputText size="125" id="notTopicText" value="#{topic.notTopicDescription.data}" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicIsRelatedTo', 'Rendered', null)}">
				<ui:define name="label">Is Related To</ui:define>
				<h:inputText size="125" id="topicIsRelatedTo"
					value="#{topic.topicRelatedTo.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicIsRelatedTo', 'Rendered', null)}">
				<ui:define name="label">Is Not Related To</ui:define>
				<h:inputText size="125" id="topicIsNotRelatedTo"
					value="#{topic.notTopicRelatedTo.data}" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicIsRelatedFrom', 'Rendered', null)}">
				<ui:define name="label">Is Related From</ui:define>
				<h:inputText size="125" id="topicIsRelatedFrom"
					value="#{topic.topicRelatedFrom.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicIsRelatedFrom', 'Rendered', null)}">
				<ui:define name="label">Is Not Related From</ui:define>
				<h:inputText size="125" id="topicIsNotRelatedFrom"
					value="#{topic.notTopicRelatedFrom.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicIsIncludedInSpec', 'Rendered', null)}">
				<ui:define name="label">Is Included In Content Spec</ui:define>
				<h:inputText size="125" id="topicIsincludedInSpec"
					value="#{topic.topicIncludedInSpec.data}" />
			</s:decorate>
			
			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTopicIsIncludedInSpec', 'Rendered', null)}">
				<ui:define name="label">Is Not Included In Content Spec</ui:define>
				<h:inputText size="125" id="topicIsNotincludedInSpec"
					value="#{topic.notTopicIncludedInSpec.data}" />
			</s:decorate>

			<s:decorate template="/layout/display.xhtml"
				rendered="#{s:hasPermission('FilterTextFreeSearch', 'Rendered', null)}">
				<ui:define name="label">
					<h:outputText
						title="You can find details on the Lucene search syntax http://lucene.apache.org/core/old_versioned_docs/versions/3_0_0/queryparsersyntax.html"
						value="Free Text Search" />
				</ui:define>
				<h:inputText size="125" id="topicFreeTextSearch"
					value="#{topic.topicTextSearch.data}" />
			</s:decorate>
		</h:panelGroup>
	</h:panelGrid>
	
	<h:panelGrid columns="3">
		<div class="name"></div>
		<h:outputText value="" />
		<h:outputText value="&#160;Not" />
			
		<s:decorate template="/layout/display.xhtml"
		 	rendered="#{s:hasPermission('FilterTopicHasRelationships', 'Rendered', null)}">
		 	<ui:define name="label">Has Related Topics</ui:define>
		</s:decorate>
		<h:selectBooleanCheckbox id="hasRelationships"
			value="#{topic.hasRelationships.data}" 
			onclick="fieldBooleanChecked(this, 'hasRelationships')" />
		<h:selectBooleanCheckbox id="notHasRelationships"
			value="#{topic.notHasRelationships.data}" />

		<s:decorate template="/layout/display.xhtml"
			rendered="#{s:hasPermission('FilterTopicHasIncomingRelationships', 'Rendered', null)}">
			<ui:define name="label">Has Incoming Related topics</ui:define>
		</s:decorate>
		<h:selectBooleanCheckbox id="hasIncomingRelationships"
				value="#{topic.hasIncomingRelationships.data}" 
				onclick="fieldBooleanChecked(this, 'hasIncomingRelationships')" />
		<h:selectBooleanCheckbox id="notHasIncomingRelationships"
			value="#{topic.notHasIncomingRelationships.data}" />
	
		<s:decorate template="/layout/display.xhtml"
			rendered="#{s:hasPermission('FilterHasXMLErrors', 'Rendered', null)}">
			<ui:define name="label">Has XML Errors</ui:define>
		</s:decorate>
		<h:selectBooleanCheckbox id="hasXMLErrors"
				value="#{topic.hasXMLErrors.data}"
				onclick="fieldBooleanChecked(this, 'hasXMLErrors')" />
		<h:selectBooleanCheckbox id="notHasXMLErrors"
			value="#{topic.notHasXMLErrors.data}" />
	
		<s:decorate template="/layout/display.xhtml"
			rendered="#{s:hasPermission('FilterHasOpenBugzillaBugs', 'Rendered', null)}">
			<ui:define name="label">Has Open Bugzilla Bugs</ui:define>
		</s:decorate>
		<h:selectBooleanCheckbox id="hasOpenBugzillaBugs"
			value="#{topic.hasOpenBugzillaBugs.data}"
			onclick="fieldBooleanChecked(this, 'hasOpenBugzillaBugs')" />
		<h:selectBooleanCheckbox id="notHasOpenBugzillaBugs"
			value="#{topic.notHasOpenBugzillaBugs.data}" />
	
		<s:decorate template="/layout/display.xhtml"
			rendered="#{s:hasPermission('FilterHasBugzillaBugs', 'Rendered', null)}">
			<ui:define name="label">Has Bugzilla Bugs</ui:define>
		</s:decorate>
		<h:selectBooleanCheckbox id="hasBugzillaBugs"
			value="#{topic.hasBugzillaBugs.data}"
			onclick="fieldBooleanChecked(this, 'hasBugzillaBugs')" />
		<h:selectBooleanCheckbox id="notHasBugzillaBugs"
			value="#{topic.notHasBugzillaBugs.data}" />
	</h:panelGrid>
				
	<h:panelGrid columns="1">
		<h:panelGroup>
			<s:decorate template="/layout/display.xhtml">
				<ui:define name="label">Match</ui:define>
				<h:selectOneRadio id="logic" value="#{topic.logic.data}"
					styleClass="radio">
					<f:selectItem itemLabel="All" itemValue="and" />
					<f:selectItem itemLabel="Any" itemValue="or" />
				</h:selectOneRadio>
			</s:decorate>
		</h:panelGroup>
	</h:panelGrid>

</ui:composition>